{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/login/login.component.html","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/orders/orders.component.html","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/order.service.ts","webpack:///./src/app/orders/orders.component.css","webpack:///./src/app/orders/orders.component.ts","webpack:///./src/app/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n<router-outlet></router-outlet>\\n\"","module.exports = \"\\n<div class=\\\"row \\\">\\n  <div class=\\\"col-sm-3\\\"></div>\\n  <div class=\\\"col-sm-6 \\\">\\n    <div class=\\\"jumbotron\\\" >\\n      <div class=\\\"text-center h1 text-dark\\\"> Login </div>\\n      <form #ref=ngForm (ngSubmit)=\\\"submit(ref.value)\\\">\\n        <div class=\\\"form-group mt-5\\\">\\n        <label for=\\\"username\\\"> <h3 class=\\\"text-info\\\"> Username:</h3> </label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" ngModel name=\\\"username\\\" #username=ngModel >\\n        \\n        \\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"password\\\"><h3 class=\\\"text-info\\\">Password:</h3></label>\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" ngModel name=\\\"password\\\" #password=ngModel>\\n        \\n            \\n            </div>\\n\\n            <div class=\\\"text-center mt-5\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\"  >Login</button>\\n            </div>\\n\\n\\n      </form>\\n      <br><br>\\n\\n      \\n    </div>\\n  </div>\\n</div>\"","module.exports = \"<div class=\\\"mt-3 mb-3\\\">\\n  <div class=\\\"col-sm-12 text-center\\\">\\n    <h1 class=\\\"text-primary mr-5\\\"> <u>Order Management System</u> </h1><hr>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n        <nav class=\\\"navbar navbar-expand-sm bg-info navbar-dark\\\">\\n            <a class=\\\"navbar-brand\\\" href=\\\"#\\\"> \\n              <img src=\\\"/assets/a.png\\\" style=\\\"width:30%; height:20% ;\\\">\\n            </a>\\n\\n            <!-- Toggler/collapsibe Button -->\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapsibleNavbar\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <!-- Navbar links -->\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"collapsibleNavbar\\\">\\n      <ul class=\\\"navbar-nav\\\">\\n      \\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link text-warning h3\\\" routerLink=\\\"login\\\">Login</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link text-warning h3\\\" routerLink=\\\"orders\\\">Orders</a>\\n        </li> \\n      </ul>\\n  </div>\\n  \\n        </nav>\\n       \\n    </div>\\n  </div>\\n\\n  \\n\\n</div>\\n<router-outlet></router-outlet>\"","module.exports = \"\\n  <div class=\\\"row\\\">\\n  \\n  <div class=\\\"col-sm-12\\\" >\\n  <h1 class=\\\"text-center text-success h2\\\"> <u>All Orders </u></h1> \\n  <div class=\\\"text-right text-danger mt-3 ml-3\\\">NewOrder\\n      <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-toggle=\\\"modal\\\" data-target=\\\"#add\\\">+</button></div>\\n\\n      <div class=\\\"modal fade\\\" id=\\\"add\\\">\\n          <div class=\\\"modal-dialog\\\">\\n            <div class=\\\"modal-content text-white  bg-info\\\">\\n                   <div class=\\\"modal-header\\\">\\n                        <h2 class=\\\"text-danger\\\">Add New Order</h2>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-dark\\\" data-dismiss=\\\"modal\\\">X</button>\\n                   </div>\\n                   <div class=\\\"modal-body bg-dark\\\">\\n                      <form #new=\\\"ngForm\\\" (ngSubmit)=\\\"addneworder(new.value)\\\">\\n  \\n                        \\n                          \\n  \\n                          <div class=\\\"form-group\\\">\\n                              <label><h6>OrderNumber</h6></label>\\n                              <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"ordernumber\\\" ngModel>\\n                          </div>\\n                          <div class=\\\"form-group\\\">\\n                              <label><h6>OrderDuedate</h6></label>\\n                              <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"orderduedate\\\" ngModel>\\n                          </div>\\n                          <div class=\\\"form-group\\\">\\n                              <label><h6>CustomerBuyername</h6></label>\\n                              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"customerbuyername\\\" ngModel>\\n                          </div>\\n                          <div class=\\\"form-group\\\">\\n                              <label><h6>CustomerAddress</h6></label>\\n                              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"CustomerAddress\\\" ngModel>\\n                          </div>\\n                          <div class=\\\"form-group\\\">\\n                              <label><h6>CustomerPhone</h6></label>\\n                              <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"customerphone\\\" ngModel>\\n                          </div>\\n                          <div class=\\\"form-group\\\">\\n                              <label><h6>OrderTotal</h6></label>\\n                              <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"ordertotal\\\" ngModel>\\n                          </div>\\n                       \\n                         \\n                    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left:220px\\\">ADD</button>\\n  \\n                      </form>\\n  \\n                   </div> \\n                  \\n                  \\n                   \\n            </div>\\n          </div>\\n        </div>\\n  \\n  \\n  <table class=\\\"table  text-center mt-3\\\">\\n    <thead>\\n      <th>S.no</th>\\n      <th>OrderNumber</th>\\n      <th>OrderDuedate</th>\\n      <th>CustomerBuyername</th>\\n      <th>CustomerAddress</th>\\n      <th>CustomerPhone</th>\\n     <th>OrderTotal</th>\\n     <th>EditOrders</th>\\n     <th>DeleteOrders</th>\\n      \\n      \\n    </thead>\\n         \\n\\n\\n  <tr *ngFor=\\\"let i of list let in=index\\\">\\n\\n  <td>{{in+1}}</td> \\n  <td>{{i.ordernumber}}</td>\\n  <td>{{i.orderduedate}}</td>\\n  <td>{{i.customerbuyername}}</td>\\n  <td>{{i.customeraddress}}</td>\\n  <td>{{i.customerphone}}</td>\\n  <td>{{i.ordertotal}}</td>\\n  <th> <button (click)=\\\"edit(i)\\\" type=\\\"button\\\" class=\\\"btn btn-warning\\\" data-toggle=\\\"modal\\\" data-target=\\\"#editbtn\\\">Edit</button> </th>\\n  <div class=\\\"modal fade\\\" id=\\\"editbtn\\\">\\n      <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content text-white bg-info\\\">\\n               <div class=\\\"modal-header\\\">\\n                    <h2>Edit Order</h2>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-dark\\\" data-dismiss=\\\"modal\\\">X</button>\\n               </div>\\n               <div class=\\\"modal-body bg-dark\\\">\\n                  <form #new=\\\"ngForm\\\" (ngSubmit)=\\\"edit(new.value)\\\">\\n\\n                    \\n                      \\n\\n                      <div class=\\\"form-group\\\">\\n                          <label><h6>OrderNumber</h6></label>\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"ordernumber\\\" ngModel>\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                          <label><h6>OrderDuedate</h6></label>\\n                          <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"orderduedate\\\" ngModel>\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                          <label><h6>CustomerBuyername</h6></label>\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"customerbuyername\\\" ngModel>\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                          <label><h6>CustomerAddress</h6></label>\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"CustomerAddress\\\" ngModel>\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                          <label><h6>CustomerPhone</h6></label>\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"customerphone\\\" ngModel>\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                          <label><h6>OrderTotal</h6></label>\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"ordertotal\\\" ngModel>\\n                      </div>\\n                   \\n                     \\n                <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left:220px\\\">Update</button>\\n\\n                  </form>\\n\\n               </div> \\n              \\n              \\n               \\n        </div>\\n      </div>\\n    </div>\\n      <th><button  (click)=\\\"delete(i)\\\" type=\\\"button\\\" class=\\\"btn btn-danger\\\">Delete</button></th>\\n \\n\\n  </tr>\\n\\n\\n  </table>\\n  </div>\\n  \\n  </div>\\n  \"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { OrdersComponent } from './orders/orders.component';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [{path:'',redirectTo:'navbar', pathMatch:'full'},\n{path:'navbar',component:NavbarComponent,\nchildren:[{path:'',redirectTo:'login',pathMatch:'full'},\n          {path:'login',component:LoginComponent},\n          {path:'orders',component:OrdersComponent}]}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'navtech';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { LoginComponent } from './login/login.component';\nimport { OrdersComponent } from './orders/orders.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    OrdersComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,FormsModule,HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor( private route:Router,private dc:UserService) { }\n\n  ngOnInit() {\n  }\n  submit(v){\n    console.log(v)\n    this.dc.Data(v).subscribe(data=>{\n      if(data['msg']=='you have logged in successfully')\n      {\n        alert(data['msg'])\n        this.route.navigate(['/navbar/orders'])\n      \n      }\n      else if(data['msg']=='invalid user name'){\n          alert(data['msg'])\n      }\n      else if(data['msg']=='invalid password'){\n        alert(data['msg'])\n      }\n    })\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25hdmJhci9uYXZiYXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient , HttpErrorResponse} from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable , throwError} from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n  \n  \n\n  constructor(private http:HttpClient, private route:Router) { }\n\n  getData(): Observable<any[]> {\n    console.log(this.route.url)\n    //return this.http.get<any[]>(this.route.url)\n    return this.http.get<any[]>('/assets/orders.json')\n    .pipe(catchError(this.errorHandler))\n   \n \n    \n  }\n\n   /** Error Handling method */\n\n   errorHandler(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError(\n      'Something bad happened; please try again later.');\n\n  }\n\n\n\n\n\n  deleteData(k) :Observable<any> {\n    console.log('in delete service');\n    console.log(k);\n    return this.http.delete(this.route.url,k);\n  }\n\n  \n  newOrder(v):Observable<any>\n{\n\n  console.log('in service');\n  console.log(v);\n  console.log(this.route.url);\n  return this.http.post(this.route.url,v);\n  \n \n  \n}\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZGVycy9vcmRlcnMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { OrderService } from '../order.service';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css']\n})\nexport class OrdersComponent implements OnInit {\n\n  constructor(private or:OrderService, private route:Router, private us:UserService) { }\n\n  list: any[]=[];\n  a:any[]=[];\n  push:any;\n  ngOnInit() {\n    console.log('hi')\n    this.or.getData().subscribe(data=>{\n      this.list=data\n    })\n    \n    // this.or.orderData().subscribe(Aarray=>{\n      \n    //   if(Aarray['msg']==='no orders'){\n    //     alert(Aarray['msg']);\n    //   }\n    //   //if user are existed interpolate that array\n    //   else if(Aarray['msg']== Aarray){\n\n    //     this.list=Aarray['msg'];\n    //   }\n    // console.log(this.list)\n    // });\n    \n  }\n  edit(e) {\n    console.log('i am in editing');\n  \n  \n  }\n  \n  \n    delete(a) {\n      console.log('i am in deleting');\n      this.or.deleteData(a).subscribe(data => {\n        alert(data['msg']);\n        if (data['msg'] === ('deleted successfuly')) {\n          return this.route.navigate(['navbar/orders']);\n          }\n       \n      });\n  \n    }\n\n    addneworder(l){\n      console.log(l);\n      this.a.push(l)\n      console.log(this.a);\n\n      this.or.newOrder(this.a).subscribe(b=>{\n        this.route.navigate(['navbar/orders'])\n        alert(b['msg']);\n        if (b['msg']===('order added successfully')) {\n  \n            return this.route.navigate(['navbar/orders'])\n        }\n  \n    \n    });\n     // this.push.push(l);\n     // return this.route.navigate(['navbar/orders']);\n\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http:HttpClient, private route:Router) { }\n\n  Data(s):Observable<any>\n  {\n     console.log(s)\n    return this.http.post('/navbar/login',s)\n  }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}